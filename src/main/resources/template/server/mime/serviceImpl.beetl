package ${project.pkgName}.service.impl;

import java.util.List;

import ${project.pkgName}.dao.${model_xzh.name}Mapper;
import ${project.pkgName}.entity.${model_xzh.name}Entity;
import ${project.pkgName}.in.vo.${model_xzh.name}VO;
import ${project.pkgName}.service.I${model_xzh.name}Service;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 *
 * ${model_xzh.name} Serviceå±‚
 *
 * @author ${project.autor}
 * @version [V1.0, ${project.dateString}]
 */
@Service("${model_xzh.lowName}Service")
public class ${model_xzh.name}ServiceImpl implements I${model_xzh.name}Service{

    private final static Logger LOGGER = LoggerFactory.getLogger(${model_xzh.name}ServiceImpl.class);

    @Autowired
    private ${model_xzh.name}Mapper ${model_xzh.lowName}Mapper;
    
    @Override
    public boolean add(${model_xzh.name}Entity ${model_xzh.lowName}Entity) {
        int num = ${model_xzh.lowName}Mapper.insert(${model_xzh.lowName}Entity);
        return num == 1;
    }

    @Override
    public boolean update(${model_xzh.name}Entity ${model_xzh.lowName}Entity) {
        int num = ${model_xzh.lowName}Mapper.update(${model_xzh.lowName}Entity);
        return num == 1;
    }

    @Override
    public int selectCount(${model_xzh.name}VO ${model_xzh.lowName}VO) {
        return ${model_xzh.lowName}Mapper.selectCount(${model_xzh.lowName}VO);
    }

    @Override
    public List<${model_xzh.name}Entity> selectPageList(${model_xzh.name}VO ${model_xzh.lowName}VO) {
        return ${model_xzh.lowName}Mapper.selectPageList(${model_xzh.lowName}VO);
    }

    @Override
    public boolean delete(${model_xzh.name}Entity ${model_xzh.lowName}Entity) {
        int num = ${model_xzh.lowName}Mapper.delete(${model_xzh.lowName}Entity);
        return num == 1;
    }
    <% for(attribute in model_xzh.attributes){
        if(attribute.columnKey){
    %>
    @Override
    public ${model_xzh.name}Entity queryById(${attribute.type} ${attribute.name}) {
        return ${model_xzh.lowName}Mapper.queryById(${attribute.name});
    }
    <% }} %>
    @Override
    public List<${model_xzh.name}Entity> queryAll() {
        return ${model_xzh.lowName}Mapper.queryAll();
    }

}
